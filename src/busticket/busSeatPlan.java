package busticket;

import java.sql.ResultSet;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author sohel
 */
public class busSeatPlan extends javax.swing.JFrame {

    Vector container = new Vector();
    Vector booked = new Vector();
    String busId = "";
    String message = "";
    public static Vector paper = new Vector();

    /**
     * Creates new form busSeatPlan
     */
    public busSeatPlan() {
        initComponents();
        setLocation(200, 10);


        datePicker.setDate(new Date());
        clearAllSeats();
        blockOfBookedSeats();
        priceShow();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        seatPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        A1 = new javax.swing.JButton();
        A2 = new javax.swing.JButton();
        A3 = new javax.swing.JButton();
        A4 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        C4 = new javax.swing.JButton();
        C3 = new javax.swing.JButton();
        C2 = new javax.swing.JButton();
        C1 = new javax.swing.JButton();
        D4 = new javax.swing.JButton();
        D3 = new javax.swing.JButton();
        D2 = new javax.swing.JButton();
        D1 = new javax.swing.JButton();
        E4 = new javax.swing.JButton();
        E3 = new javax.swing.JButton();
        E2 = new javax.swing.JButton();
        E1 = new javax.swing.JButton();
        F4 = new javax.swing.JButton();
        F3 = new javax.swing.JButton();
        F2 = new javax.swing.JButton();
        F1 = new javax.swing.JButton();
        G4 = new javax.swing.JButton();
        G3 = new javax.swing.JButton();
        G2 = new javax.swing.JButton();
        G1 = new javax.swing.JButton();
        H4 = new javax.swing.JButton();
        H3 = new javax.swing.JButton();
        H2 = new javax.swing.JButton();
        H1 = new javax.swing.JButton();
        I4 = new javax.swing.JButton();
        I3 = new javax.swing.JButton();
        I2 = new javax.swing.JButton();
        I1 = new javax.swing.JButton();
        J5 = new javax.swing.JButton();
        J4 = new javax.swing.JButton();
        J3 = new javax.swing.JButton();
        J2 = new javax.swing.JButton();
        J1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        time = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        subTo = new javax.swing.JComboBox();
        destination = new javax.swing.JComboBox();
        subFrom = new javax.swing.JComboBox();
        fromWhere = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cost = new javax.swing.JTextField();
        contact_number = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        paidText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        returnText = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        datePicker = new org.jdesktop.swingx.JXDatePicker();
        id_supervisorPanel = new javax.swing.JPanel();
        busId_field = new javax.swing.JTextField();
        supervisor_name_field = new javax.swing.JTextField();
        supervisor_mob_field = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Booking Seat");

        jPanel1.setBackground(new java.awt.Color(205, 255, 205));
        jPanel1.setForeground(new java.awt.Color(205, 255, 205));
        jPanel1.setFont(new java.awt.Font("Vani", 1, 20)); // NOI18N

        seatPanel.setBackground(new java.awt.Color(138, 142, 172));
        seatPanel.setForeground(new java.awt.Color(205, 255, 205));

        jButton1.setText("Driver");

        A1.setBackground(new java.awt.Color(255, 255, 255));
        A1.setText("A1");
        A1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A1ActionPerformed(evt);
            }
        });

        A2.setBackground(new java.awt.Color(255, 255, 255));
        A2.setText("A2");
        A2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A2ActionPerformed(evt);
            }
        });

        A3.setBackground(new java.awt.Color(255, 255, 255));
        A3.setText("A3");
        A3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A3ActionPerformed(evt);
            }
        });

        A4.setBackground(new java.awt.Color(255, 255, 255));
        A4.setText("A4");
        A4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A4ActionPerformed(evt);
            }
        });

        B4.setBackground(new java.awt.Color(255, 255, 255));
        B4.setText("B4");
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        B3.setBackground(new java.awt.Color(255, 255, 255));
        B3.setText("B3");
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        B2.setBackground(new java.awt.Color(255, 255, 255));
        B2.setText("B2");
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        B1.setBackground(new java.awt.Color(255, 255, 255));
        B1.setText("B1");
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        C4.setBackground(new java.awt.Color(255, 255, 255));
        C4.setText("C4");
        C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4ActionPerformed(evt);
            }
        });

        C3.setBackground(new java.awt.Color(255, 255, 255));
        C3.setText("C3");
        C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3ActionPerformed(evt);
            }
        });

        C2.setBackground(new java.awt.Color(255, 255, 255));
        C2.setText("C2");
        C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2ActionPerformed(evt);
            }
        });

        C1.setBackground(new java.awt.Color(255, 255, 255));
        C1.setText("C1");
        C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1ActionPerformed(evt);
            }
        });

        D4.setBackground(new java.awt.Color(255, 255, 255));
        D4.setText("D4");
        D4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D4ActionPerformed(evt);
            }
        });

        D3.setBackground(new java.awt.Color(255, 255, 255));
        D3.setText("D3");
        D3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D3ActionPerformed(evt);
            }
        });

        D2.setBackground(new java.awt.Color(255, 255, 255));
        D2.setText("D2");
        D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2ActionPerformed(evt);
            }
        });

        D1.setBackground(new java.awt.Color(255, 255, 255));
        D1.setText("D1");
        D1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D1ActionPerformed(evt);
            }
        });

        E4.setBackground(new java.awt.Color(255, 255, 255));
        E4.setText("E4");
        E4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E4ActionPerformed(evt);
            }
        });

        E3.setBackground(new java.awt.Color(255, 255, 255));
        E3.setText("E3");
        E3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E3ActionPerformed(evt);
            }
        });

        E2.setBackground(new java.awt.Color(255, 255, 255));
        E2.setText("E2");
        E2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E2ActionPerformed(evt);
            }
        });

        E1.setBackground(new java.awt.Color(255, 255, 255));
        E1.setText("E1");
        E1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E1ActionPerformed(evt);
            }
        });

        F4.setBackground(new java.awt.Color(255, 255, 255));
        F4.setText("F4");
        F4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F4ActionPerformed(evt);
            }
        });

        F3.setBackground(new java.awt.Color(255, 255, 255));
        F3.setText("F3");
        F3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F3ActionPerformed(evt);
            }
        });

        F2.setBackground(new java.awt.Color(255, 255, 255));
        F2.setText("F2");
        F2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F2ActionPerformed(evt);
            }
        });

        F1.setBackground(new java.awt.Color(255, 255, 255));
        F1.setText("F1");
        F1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F1ActionPerformed(evt);
            }
        });

        G4.setBackground(new java.awt.Color(255, 255, 255));
        G4.setText("G4");
        G4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G4ActionPerformed(evt);
            }
        });

        G3.setBackground(new java.awt.Color(255, 255, 255));
        G3.setText("G3");
        G3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G3ActionPerformed(evt);
            }
        });

        G2.setBackground(new java.awt.Color(255, 255, 255));
        G2.setText("G2");
        G2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G2ActionPerformed(evt);
            }
        });

        G1.setBackground(new java.awt.Color(255, 255, 255));
        G1.setText("G1");
        G1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G1ActionPerformed(evt);
            }
        });

        H4.setBackground(new java.awt.Color(255, 255, 255));
        H4.setText("H4");
        H4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H4ActionPerformed(evt);
            }
        });

        H3.setBackground(new java.awt.Color(255, 255, 255));
        H3.setText("H3");
        H3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H3ActionPerformed(evt);
            }
        });

        H2.setBackground(new java.awt.Color(255, 255, 255));
        H2.setText("H2");
        H2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H2ActionPerformed(evt);
            }
        });

        H1.setBackground(new java.awt.Color(255, 255, 255));
        H1.setText("H1");
        H1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H1ActionPerformed(evt);
            }
        });

        I4.setBackground(new java.awt.Color(255, 255, 255));
        I4.setText("I4");
        I4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I4ActionPerformed(evt);
            }
        });

        I3.setBackground(new java.awt.Color(255, 255, 255));
        I3.setText("I3");
        I3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I3ActionPerformed(evt);
            }
        });

        I2.setBackground(new java.awt.Color(255, 255, 255));
        I2.setText("I2");
        I2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I2ActionPerformed(evt);
            }
        });

        I1.setBackground(new java.awt.Color(255, 255, 255));
        I1.setText("I1");
        I1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I1ActionPerformed(evt);
            }
        });

        J5.setBackground(new java.awt.Color(255, 255, 255));
        J5.setText("J5");
        J5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J5ActionPerformed(evt);
            }
        });

        J4.setBackground(new java.awt.Color(255, 255, 255));
        J4.setText("J4");
        J4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J4ActionPerformed(evt);
            }
        });

        J3.setBackground(new java.awt.Color(255, 255, 255));
        J3.setText("J3");
        J3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J3ActionPerformed(evt);
            }
        });

        J2.setBackground(new java.awt.Color(255, 255, 255));
        J2.setText("J2");
        J2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J2ActionPerformed(evt);
            }
        });

        J1.setBackground(new java.awt.Color(255, 255, 255));
        J1.setText("J1");
        J1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                J1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout seatPanelLayout = new javax.swing.GroupLayout(seatPanel);
        seatPanel.setLayout(seatPanelLayout);
        seatPanelLayout.setHorizontalGroup(
            seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seatPanelLayout.createSequentialGroup()
                            .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(H1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                .addComponent(G1, 0, 1, Short.MAX_VALUE)
                                .addComponent(F1, 0, 1, Short.MAX_VALUE)
                                .addComponent(A1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(B1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(C1, javax.swing.GroupLayout.Alignment.LEADING, 0, 1, Short.MAX_VALUE)
                                .addComponent(D1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(E1, 0, 1, Short.MAX_VALUE)
                                .addComponent(I1, 0, 1, Short.MAX_VALUE))
                            .addGap(10, 10, 10)
                            .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(I2, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                                .addComponent(H2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(G2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(F2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(E2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(D2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(C2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(B2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(A2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(60, 60, 60)
                            .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(A3, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                .addComponent(B3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(B4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 48, Short.MAX_VALUE)
                                .addComponent(A4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, seatPanelLayout.createSequentialGroup()
                        .addComponent(J1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(J2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(J3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(J4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(I3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(H3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(G3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(F3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(E3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(D3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(C3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(J5, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                            .addComponent(I4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                            .addComponent(H4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 47, Short.MAX_VALUE)
                            .addComponent(G4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                            .addComponent(F4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                            .addComponent(E4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                            .addComponent(D4, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE)
                            .addComponent(C4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        seatPanelLayout.setVerticalGroup(
            seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(seatPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(A4)
                    .addComponent(A1)
                    .addComponent(A2)
                    .addComponent(A3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B4)
                    .addComponent(B3)
                    .addComponent(B2)
                    .addComponent(B1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(C4)
                    .addComponent(C3)
                    .addComponent(C2)
                    .addComponent(C1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(D4)
                    .addComponent(D3)
                    .addComponent(D2)
                    .addComponent(D1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(E4)
                    .addComponent(E3)
                    .addComponent(E2)
                    .addComponent(E1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(F4)
                    .addComponent(F3)
                    .addComponent(F2)
                    .addComponent(F1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(G4)
                    .addComponent(G3)
                    .addComponent(G2)
                    .addComponent(G1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(H4)
                    .addComponent(H3)
                    .addComponent(H2)
                    .addComponent(H1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(I4)
                    .addComponent(I3)
                    .addComponent(I2)
                    .addComponent(I1))
                .addGap(27, 27, 27)
                .addGroup(seatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(J5)
                    .addComponent(J4)
                    .addComponent(J3)
                    .addComponent(J2)
                    .addComponent(J1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setBackground(new java.awt.Color(255, 0, 0));
        jLabel1.setFont(new java.awt.Font("FrankRuehl", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Booking Ticket");

        jPanel2.setBackground(new java.awt.Color(205, 255, 205));

        time.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "7:30 am", "10:30 am", "3:30 pm", "8:00 pm", "11.00 pm" }));
        time.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                timeItemStateChanged(evt);
            }
        });
        time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Time :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("To :");

        destination.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One", "Dhaka", "Rajshahi", "Chittagong", "Barisal", "Sylhet", "Khulna", "Rangpur" }));
        destination.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                destinationItemStateChanged(evt);
            }
        });
        destination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinationActionPerformed(evt);
            }
        });

        fromWhere.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select One.", "Dhaka", "Rajshahi", "Chittagong", "Barisal", "Sylhet", "Khulna", "Rangpur" }));
        fromWhere.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fromWhereItemStateChanged(evt);
            }
        });
        fromWhere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromWhereActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("From");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Total amount :");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Contact No:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Name:");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel11.setText("Tk.");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Paid : ");

        paidText.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                paidTextCaretUpdate(evt);
            }
        });
        paidText.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                paidTextCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Return : ");

        jLabel14.setText("Tk.");

        jLabel15.setText("Tk.");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Date : ");

        datePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerActionPerformed(evt);
            }
        });
        datePicker.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                datePickerCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                datePickerInputMethodTextChanged(evt);
            }
        });
        datePicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                datePickerKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                datePickerKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromWhere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                .addComponent(contact_number))))
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(subFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel16)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cost)
                                            .addComponent(paidText)
                                            .addComponent(returnText, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15))))))
                        .addComponent(subTo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(contact_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromWhere, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(16, 16, 16)
                .addComponent(subFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(paidText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(returnText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(25, 25, 25))
        );

        id_supervisorPanel.setBackground(new java.awt.Color(205, 255, 205));
        id_supervisorPanel.setForeground(new java.awt.Color(205, 255, 205));

        busId_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busId_fieldActionPerformed(evt);
            }
        });

        jLabel10.setText("Supervisor Mob : ");

        jLabel9.setText("Supervisor Name : ");

        jLabel8.setText("Bus ID : ");

        javax.swing.GroupLayout id_supervisorPanelLayout = new javax.swing.GroupLayout(id_supervisorPanel);
        id_supervisorPanel.setLayout(id_supervisorPanelLayout);
        id_supervisorPanelLayout.setHorizontalGroup(
            id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(id_supervisorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(7, 7, 7)
                .addGroup(id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(supervisor_mob_field, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                    .addComponent(supervisor_name_field)
                    .addComponent(busId_field))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        id_supervisorPanelLayout.setVerticalGroup(
            id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(id_supervisorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(busId_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(supervisor_name_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(id_supervisorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(supervisor_mob_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(65, 65, 65)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(seatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(id_supervisorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(id_supervisorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(seatPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jMenu4.setText("File");

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/ADD.GIF"))); // NOI18N
        jMenuItem6.setText("Booking Seats");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add_over.png"))); // NOI18N
        jMenuItem9.setText("Add new Bus");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem9);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete_down.png"))); // NOI18N
        jMenuItem2.setText("Cancel Seats");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/blue.gif"))); // NOI18N
        jMenuItem10.setText(" Scheduled Bus");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem10);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/generic.red.gif"))); // NOI18N
        jMenuItem11.setText("Exit");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Logout");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Logout");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3ActionPerformed
        int getCheck = check(C3.getText());
        if (getCheck == 1) {
            C3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            C3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_C3ActionPerformed

    private void E2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E2ActionPerformed
        int getCheck = check(E2.getText());
        if (getCheck == 1) {
            E2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            E2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_E2ActionPerformed

    private void G4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G4ActionPerformed
        int getCheck = check(G4.getText());
        if (getCheck == 1) {
            G4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            G4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_G4ActionPerformed

    private void J3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J3ActionPerformed
        int getCheck = check(J3.getText());
        if (getCheck == 1) {
            J3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            J3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_J3ActionPerformed

    private void J4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J4ActionPerformed
        int getCheck = check(J4.getText());
        if (getCheck == 1) {
            J4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            J4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_J4ActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void A1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A1ActionPerformed
        int getCheck = check(A1.getText());
        if (getCheck == 1) {
            A1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            A1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_A1ActionPerformed

    private void A2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A2ActionPerformed
        int getCheck = check(A2.getText());
        if (getCheck == 1) {
            A2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            A2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_A2ActionPerformed

    private void A3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A3ActionPerformed
        int getCheck = check(A3.getText());
        if (getCheck == 1) {
            A3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            A3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_A3ActionPerformed

    private void A4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A4ActionPerformed
        int getCheck = check(A4.getText());
        if (getCheck == 1) {
            A4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            A4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_A4ActionPerformed

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        int getCheck = check(B1.getText());
        if (getCheck == 1) {
            B1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            B1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_B1ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        int getCheck = check(B2.getText());
        if (getCheck == 1) {
            B2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            B2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_B2ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        int getCheck = check(B3.getText());
        if (getCheck == 1) {
            B3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            B3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_B3ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        int getCheck = check(B4.getText());
        if (getCheck == 1) {
            B4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            B4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_B4ActionPerformed

    private void C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1ActionPerformed
        int getCheck = check(C1.getText());
        if (getCheck == 1) {
            C1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            C1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_C1ActionPerformed

    private void C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2ActionPerformed
        int getCheck = check(C2.getText());
        if (getCheck == 1) {
            C2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            C2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_C2ActionPerformed

    private void C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4ActionPerformed
        int getCheck = check(C4.getText());
        if (getCheck == 1) {
            C4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            C4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_C4ActionPerformed

    private void D1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D1ActionPerformed
        int getCheck = check(D1.getText());
        if (getCheck == 1) {
            D1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            D1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_D1ActionPerformed

    private void D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2ActionPerformed
        int getCheck = check(D2.getText());
        if (getCheck == 1) {
            D2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            D2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_D2ActionPerformed

    private void D3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D3ActionPerformed
        int getCheck = check(D3.getText());
        if (getCheck == 1) {
            D3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            D3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_D3ActionPerformed

    private void D4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D4ActionPerformed
        int getCheck = check(D4.getText());
        if (getCheck == 1) {
            D4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            D4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_D4ActionPerformed

    private void E1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E1ActionPerformed
        int getCheck = check(E1.getText());
        if (getCheck == 1) {
            E1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            E1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_E1ActionPerformed

    private void E3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E3ActionPerformed
        int getCheck = check(E3.getText());
        if (getCheck == 1) {
            E3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            E3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_E3ActionPerformed

    private void E4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E4ActionPerformed
        int getCheck = check(E4.getText());
        if (getCheck == 1) {
            E4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            E4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_E4ActionPerformed

    private void F1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F1ActionPerformed
        int getCheck = check(F1.getText());
        if (getCheck == 1) {
            F1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            F1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_F1ActionPerformed

    private void F2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F2ActionPerformed
        int getCheck = check(F2.getText());
        if (getCheck == 1) {
            F2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            F2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_F2ActionPerformed

    private void F3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F3ActionPerformed
        int getCheck = check(F3.getText());
        if (getCheck == 1) {
            F3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            F3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_F3ActionPerformed

    private void F4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F4ActionPerformed
        int getCheck = check(F4.getText());
        if (getCheck == 1) {
            F4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            F4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_F4ActionPerformed

    private void G1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G1ActionPerformed
        int getCheck = check(G1.getText());
        if (getCheck == 1) {
            G1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            G1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_G1ActionPerformed

    private void G2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G2ActionPerformed
        int getCheck = check(G2.getText());
        if (getCheck == 1) {
            G2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            G2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_G2ActionPerformed

    private void G3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G3ActionPerformed
        int getCheck = check(G3.getText());
        if (getCheck == 1) {
            G3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            G3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_G3ActionPerformed

    private void H1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H1ActionPerformed
        int getCheck = check(H1.getText());
        if (getCheck == 1) {
            H1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            H1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_H1ActionPerformed

    private void H2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H2ActionPerformed
        int getCheck = check(H2.getText());
        if (getCheck == 1) {
            H2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            H2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_H2ActionPerformed

    private void H3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H3ActionPerformed
        int getCheck = check(H3.getText());
        if (getCheck == 1) {
            H3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            H3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_H3ActionPerformed

    private void H4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H4ActionPerformed
        int getCheck = check(H4.getText());
        if (getCheck == 1) {
            H4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            H4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_H4ActionPerformed

    private void I1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I1ActionPerformed
        int getCheck = check(I1.getText());
        if (getCheck == 1) {
            I1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            I1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_I1ActionPerformed

    private void I2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I2ActionPerformed
        int getCheck = check(I2.getText());
        if (getCheck == 1) {
            I2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            I2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_I2ActionPerformed

    private void I3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I3ActionPerformed
        int getCheck = check(I3.getText());
        if (getCheck == 1) {
            I3.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            I3.setBackground(Color.blue);
        }
    }//GEN-LAST:event_I3ActionPerformed

    private void I4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I4ActionPerformed
        int getCheck = check(I4.getText());
        if (getCheck == 1) {
            I4.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            I4.setBackground(Color.blue);
        }
    }//GEN-LAST:event_I4ActionPerformed

    private void J1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J1ActionPerformed
        int getCheck = check(J1.getText());
        if (getCheck == 1) {
            J1.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            J1.setBackground(Color.blue);
        }
    }//GEN-LAST:event_J1ActionPerformed

    private void J2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J2ActionPerformed
        int getCheck = check(J2.getText());
        if (getCheck == 1) {
            J2.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            J2.setBackground(Color.blue);
        }
    }//GEN-LAST:event_J2ActionPerformed

    private void J5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_J5ActionPerformed
        int getCheck = check(J5.getText());
        if (getCheck == 1) {
            J5.setBackground(Color.WHITE);
        } else if (getCheck == 2) {
            J5.setBackground(Color.blue);
        }
    }//GEN-LAST:event_J5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            Double returnTaka = Double.valueOf(returnText.getText().toString());

            if (returnTaka >= 0) {
                String time_t = time.getSelectedItem().toString();
                String name_of_passenger = name.getText();
                String dest = destination.getSelectedItem().toString();
                String str = contact_number.getText().toString();
                boolean ck = true;
                for (int i = 0; i < str.length(); i++) {
                    if (!((str.charAt(i) >= '0' && str.charAt(i) <= '9') || str.charAt(i) == '+')) {
                        JOptionPane.showMessageDialog(null, "Incorrect contact numbers ...");
                        ck = false;
                        break;
                    }
                }
                if (ck == true) {
                    if (cost.getText().toString().equals("") || name_of_passenger.equals("") || str.equals("")) {
                        JOptionPane.showMessageDialog(null, "Please fill up the name, contact number, amount correctly...");
                        clearAllSeats();
                        blockOfBookedSeats();
                    } else {
                        int taka = 0;
                        if (container.size() > 0) {
                            taka = (Integer.parseInt(cost.getText().toString())) / container.size();
                        }


                        // it is for date format
                        Date today = datePicker.getDate();
                        SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");
                        String date_of_going = dateFormatter.format(today);



                        String contact = contact_number.getText().toString();
                        message = "";
                        boolean is_printable = false;

                        try {
                            Class.forName("com.mysql.jdbc.Driver");
                            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "");
                            Statement st = con.createStatement();

                            for (int i = 0; i < container.size(); i++) {

                                String current_seat = container.elementAt(i).toString();
                                String query = "insert into customer(busId,time,name_of_passenger,seat,destination,contact,taka,from_where,sub_from,sub_to,supervisor_name,supervisor_mob_no,date_of_going) values(?,?,?,?,?,?,?,?,?,?,?,?,?)";

                                PreparedStatement ps = con.prepareStatement(query);

                                ps.setString(1, busId);
                                ps.setString(2, time_t);
                                ps.setString(3, name_of_passenger);
                                ps.setString(4, current_seat);
                                ps.setString(5, dest);
                                ps.setString(6, contact);
                                ps.setInt(7, taka);
                                ps.setString(8, fromWhere.getSelectedItem().toString());
                                ps.setString(9, subFrom.getSelectedItem().toString());
                                ps.setString(10, subTo.getSelectedItem().toString());
                                ps.setString(11, supervisor_name_field.getText());
                                ps.setString(12, supervisor_mob_field.getText());
                                ps.setString(13, date_of_going);

                                ps.executeUpdate();
                                message = message + container.elementAt(i) + " ";
                                st.close();
                                is_printable = true;

                            }
                            if (is_printable == true) {

                                JOptionPane.showMessageDialog(null, message + "seat/seats are now booked ...");
                                paidText.setText(null);

                                Vector forPrint = new Vector();
                                forPrint.add("Bus Id: " + busId_field.getText());
                                forPrint.add("Name : " + name.getText().toString());
                                forPrint.add("Contact number : " + contact_number.getText().toString());
                                forPrint.add("Seat(s) : " + message);
                                forPrint.add("Supervisor Name : " + supervisor_name_field.getText());
                                forPrint.add("Supervisor's number : " + supervisor_mob_field.getText());
                                forPrint.add("N.B: Booked ticket(s) is not returned...");

                                printMessage pm = new printMessage();
                                paper = new Vector(forPrint);
                                pm.print_message();
                            }
                            clearAllSeats();
                            blockOfBookedSeats();
                            priceShow();
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }

                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Taka properly not paid...");
            }
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "No value");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void destinationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_destinationItemStateChanged
        // TODO add your handling code here:
        busId = checkBus();
        if (busId.equals("")) {
            seatPanel.setVisible(false);
        } else {
            seatPanel.setVisible(true);
        }

        clearAllSeats();
        blockOfBookedSeats();
        priceShow();

        String curFrom = destination.getSelectedItem().toString();
        subTo.removeAllItems();
        Vector<String> get = showSub(curFrom);
        for (int i = 0; i < get.size(); i++) {
            subTo.addItem(get.elementAt(i));
        }
    }//GEN-LAST:event_destinationItemStateChanged

    private void timeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_timeItemStateChanged
        // TODO add your handling code here:
        busId = checkBus();
        if (busId.equals("")) {
            seatPanel.setVisible(false);
        } else {
            seatPanel.setVisible(true);
        }
        clearAllSeats();
        blockOfBookedSeats();
        priceShow();
    }//GEN-LAST:event_timeItemStateChanged

    private void destinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destinationActionPerformed

    private void fromWhereItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fromWhereItemStateChanged
        // TODO add your handling code here:
        busId = checkBus();
        if (busId.equals("")) {
            seatPanel.setVisible(false);
        } else {
            seatPanel.setVisible(true);
        }


        clearAllSeats();
        blockOfBookedSeats();
        priceShow();


        String curFrom = fromWhere.getSelectedItem().toString();
        subFrom.removeAllItems();
        Vector<String> get = showSub(curFrom);
        for (int i = 0; i < get.size(); i++) {
            subFrom.addItem(get.elementAt(i));
        }
    }//GEN-LAST:event_fromWhereItemStateChanged

    public String checkBus() {
        String source_to_search = fromWhere.getSelectedItem().toString();
        String dest_to_search = destination.getSelectedItem().toString();
        String time_to_search = time.getSelectedItem().toString();


        // it is for date format
        Date today = datePicker.getDate();
        SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");
        String date_of_going = dateFormatter.format(today);



        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "");
            Statement st = con.createStatement();

            String qu = "select * from bus where destination='" + dest_to_search + "' and source='" + source_to_search + "' and time='" + time_to_search + "' and date_of_going='" + date_of_going + "'";
            ResultSet rso = (ResultSet) st.executeQuery(qu);

            if (rso.next()) {

                busId_field.setEditable(false);
                supervisor_mob_field.setEditable(false);
                supervisor_name_field.setEditable(false);


                id_supervisorPanel.setVisible(true);
                busId_field.setText(rso.getString("busId"));
                supervisor_name_field.setText(rso.getString("supervisor_name"));

                supervisor_mob_field.setText(rso.getString("supervisor_mob_no"));


                return rso.getString("busId");

            } else {
                id_supervisorPanel.setVisible(false);
                busId_field.setText(null);
                supervisor_name_field.setText(null);

                supervisor_mob_field.setText(null);
                return "";
            }

        } catch (Exception e) {
            id_supervisorPanel.setVisible(false);
            busId_field.setText(null);
            supervisor_name_field.setText(null);
            supervisor_mob_field.setText(null);
            JOptionPane.showMessageDialog(rootPane, e);
            return "";
        }

    }

    private void fromWhereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromWhereActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromWhereActionPerformed

    private void busId_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busId_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_busId_fieldActionPerformed

    private void paidTextCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_paidTextCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_paidTextCaretPositionChanged

    private void paidTextCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_paidTextCaretUpdate
        // TODO add your handling code here:
        String getTaka = paidText.getText();
        int len = getTaka.length();
        char c = 's';
        if (len > 0) {
            c = getTaka.charAt(len - 1);
        }
        if (len == 0) {
            returnText.setText(null);
        } else if ((c >= '0' && c <= '9') || c == '.') {
            try {
                Double paidTaka = Double.valueOf(paidText.getText().toString());
                Double amountTaka = Double.valueOf(cost.getText().toString());
                Double returnTaka = paidTaka - amountTaka;
                returnText.setText(String.valueOf(returnTaka));
                returnText.setEditable(false);
            } catch (Exception NumException) {
                JOptionPane.showMessageDialog(null, "Only 0-9 and '.' are allowed...");
                returnText.setText(null);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Only 0-9 and '.' are allowed...");
            returnText.setText(null);
        }
    }//GEN-LAST:event_paidTextCaretUpdate

    private void datePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerActionPerformed
        // TODO add your handling code here:
        busId = checkBus();
        if (busId.equals("")) {
            seatPanel.setVisible(false);
        } else {
            seatPanel.setVisible(true);
        }

        checkdate ckDate = new checkdate();
        int got = ckDate.isPossible(datePicker.getDate());
        if (got == 0) {
            JOptionPane.showMessageDialog(null, "Passed time can't be selected....");
        } else {
        }
    }//GEN-LAST:event_datePickerActionPerformed

    private void datePickerCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_datePickerCaretPositionChanged
   }//GEN-LAST:event_datePickerCaretPositionChanged

    private void datePickerInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_datePickerInputMethodTextChanged
   }//GEN-LAST:event_datePickerInputMethodTextChanged

    private void datePickerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datePickerKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerKeyPressed

    private void datePickerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datePickerKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerKeyTyped

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        new busSeatPlan().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        new addNewBus().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        new CancelSeat().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        new rootSclection().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new welCome().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeActionPerformed

    void blockOfBookedSeats() {
        String search_time = time.getSelectedItem().toString();
        String search_id = busId;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "");
            Statement st = con.createStatement();

            String query = "select seat from customer where busId='" + search_id + "' and time='" + search_time + "'";
            ResultSet rso = (ResultSet) st.executeQuery(query);

            while (rso.next()) {
                String seat_name = rso.getString("seat");

                //System.out.println(seat_name);
                booked.add(seat_name);
                block(seat_name);
            }


        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    void block(String name) {
        if (name.equals("A1")) {
            A1.setBackground(Color.red);
        } else if (name.equals("A2")) {
            A2.setBackground(Color.red);
        } else if (name.equals("A3")) {
            A3.setBackground(Color.red);
        } else if (name.equals("A4")) {
            A4.setBackground(Color.red);
        } else if (name.equals("B1")) {
            B1.setBackground(Color.red);
        } else if (name.equals("B2")) {
            B2.setBackground(Color.red);
        } else if (name.equals("B3")) {
            B3.setBackground(Color.red);
        } else if (name.equals("B4")) {
            B4.setBackground(Color.red);
        } else if (name.equals("C1")) {
            C1.setBackground(Color.red);
        } else if (name.equals("C2")) {
            C2.setBackground(Color.red);
        } else if (name.equals("C3")) {
            C3.setBackground(Color.red);
        } else if (name.equals("C4")) {
            C4.setBackground(Color.red);
        } else if (name.equals("D1")) {
            D1.setBackground(Color.red);
        } else if (name.equals("D2")) {
            D2.setBackground(Color.red);
        } else if (name.equals("D3")) {
            D3.setBackground(Color.red);
        } else if (name.equals("D4")) {
            D4.setBackground(Color.red);
        } else if (name.equals("E1")) {
            E1.setBackground(Color.red);
        } else if (name.equals("E2")) {
            E2.setBackground(Color.red);
        } else if (name.equals("E3")) {
            E3.setBackground(Color.red);
        } else if (name.equals("E4")) {
            E4.setBackground(Color.red);
        } else if (name.equals("F1")) {
            F1.setBackground(Color.red);
        } else if (name.equals("F2")) {
            F2.setBackground(Color.red);
        } else if (name.equals("F3")) {
            F3.setBackground(Color.red);
        } else if (name.equals("F4")) {
            F4.setBackground(Color.red);
        } else if (name.equals("G1")) {
            G1.setBackground(Color.red);
        } else if (name.equals("G2")) {
            G2.setBackground(Color.red);
        } else if (name.equals("G3")) {
            G3.setBackground(Color.red);
        } else if (name.equals("G4")) {
            G4.setBackground(Color.red);
        } else if (name.equals("H1")) {
            H1.setBackground(Color.red);
        } else if (name.equals("H2")) {
            H2.setBackground(Color.red);
        } else if (name.equals("H3")) {
            H3.setBackground(Color.red);
        } else if (name.equals("H4")) {
            H4.setBackground(Color.red);
        } else if (name.equals("I1")) {
            I1.setBackground(Color.red);
        } else if (name.equals("I2")) {
            I2.setBackground(Color.red);
        } else if (name.equals("I3")) {
            I3.setBackground(Color.red);
        } else if (name.equals("I4")) {
            I4.setBackground(Color.red);
        } else if (name.equals("J1")) {
            J1.setBackground(Color.red);
        } else if (name.equals("J2")) {
            J2.setBackground(Color.red);
        } else if (name.equals("J3")) {
            J3.setBackground(Color.red);
        } else if (name.equals("J4")) {
            J4.setBackground(Color.red);
        } else if (name.equals("J5")) {
            J5.setBackground(Color.red);
        }


    }

    void clearAllSeats() {
        A1.setBackground(Color.white);
        A2.setBackground(Color.white);
        A3.setBackground(Color.white);
        A4.setBackground(Color.white);

        B1.setBackground(Color.white);
        B2.setBackground(Color.white);
        B3.setBackground(Color.white);
        B4.setBackground(Color.white);


        C1.setBackground(Color.white);
        C2.setBackground(Color.white);
        C3.setBackground(Color.white);
        C4.setBackground(Color.white);


        D1.setBackground(Color.white);
        D2.setBackground(Color.white);
        D3.setBackground(Color.white);
        D4.setBackground(Color.white);


        E1.setBackground(Color.white);
        E2.setBackground(Color.white);
        E3.setBackground(Color.white);
        E4.setBackground(Color.white);


        F1.setBackground(Color.white);
        F2.setBackground(Color.white);
        F3.setBackground(Color.white);
        F4.setBackground(Color.white);


        G1.setBackground(Color.white);
        G2.setBackground(Color.white);
        G3.setBackground(Color.white);
        G4.setBackground(Color.white);


        H1.setBackground(Color.white);
        H2.setBackground(Color.white);
        H3.setBackground(Color.white);
        H4.setBackground(Color.white);


        I1.setBackground(Color.white);
        I2.setBackground(Color.white);
        I3.setBackground(Color.white);
        I4.setBackground(Color.white);


        J1.setBackground(Color.white);
        J2.setBackground(Color.white);
        J3.setBackground(Color.white);
        J4.setBackground(Color.white);
        J5.setBackground(Color.white);

        container.clear();
        booked.clear();

    }

    /**
     * @param args the command line arguments
     */
    public Vector<String> showSub(String dis) {
        Vector tmp = new Vector();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "");
            Statement st = con.createStatement();

            String query = "select stopage from substation where division='" + dis + "'";

            ResultSet rso = (ResultSet) st.executeQuery(query);

            while (rso.next()) {
                tmp.add(rso.getString("stopage"));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return tmp;

    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new busSeatPlan().setVisible(true);
            }
        });
    }

    public int check(String seat) {
        if (booked.contains(seat)) {
            JOptionPane.showMessageDialog(null, "Seat already booked ...");
            return 0;
        } else if (container.contains(seat)) {
            container.remove(seat);
            priceShow();
            return 1;
        } else {
            container.add(seat);
            priceShow();
            //System.out.println(seat);
            return 2;
        }
    }

    void priceShow() {
        int perCost = (priceOfTravel(destination.getSelectedItem().toString())) + ((subTo.getSelectedIndex()) * 20);
        cost.setText(String.valueOf(perCost * container.size()));
        cost.setEditable(false);
    }

    public int priceOfTravel(String dest) {
        if (fromWhere.getSelectedItem().toString().equals(destination.getSelectedItem().toString())) {
            JOptionPane.showMessageDialog(null, "Source and destination are same ...");
            return 0;
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/test", "root", "");
            Statement st = con.createStatement();

            String query = "select per_cost from bus where source='" + fromWhere.getSelectedItem().toString() + "' and destination='" + destination.getSelectedItem().toString() + "'";

            ResultSet rso = (ResultSet) st.executeQuery(query);
            if (rso.next()) {
                return rso.getInt("per_cost");
            } else {
                return 0;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


        return 0;
    }
    /*
     * Rajshahi Chittagong Barisal Sylhet Khulna Rangpur
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A1;
    private javax.swing.JButton A2;
    private javax.swing.JButton A3;
    private javax.swing.JButton A4;
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton C1;
    private javax.swing.JButton C2;
    private javax.swing.JButton C3;
    private javax.swing.JButton C4;
    private javax.swing.JButton D1;
    private javax.swing.JButton D2;
    private javax.swing.JButton D3;
    private javax.swing.JButton D4;
    private javax.swing.JButton E1;
    private javax.swing.JButton E2;
    private javax.swing.JButton E3;
    private javax.swing.JButton E4;
    private javax.swing.JButton F1;
    private javax.swing.JButton F2;
    private javax.swing.JButton F3;
    private javax.swing.JButton F4;
    private javax.swing.JButton G1;
    private javax.swing.JButton G2;
    private javax.swing.JButton G3;
    private javax.swing.JButton G4;
    private javax.swing.JButton H1;
    private javax.swing.JButton H2;
    private javax.swing.JButton H3;
    private javax.swing.JButton H4;
    private javax.swing.JButton I1;
    private javax.swing.JButton I2;
    private javax.swing.JButton I3;
    private javax.swing.JButton I4;
    private javax.swing.JButton J1;
    private javax.swing.JButton J2;
    private javax.swing.JButton J3;
    private javax.swing.JButton J4;
    private javax.swing.JButton J5;
    private javax.swing.JTextField busId_field;
    private javax.swing.JTextField contact_number;
    private javax.swing.JTextField cost;
    private org.jdesktop.swingx.JXDatePicker datePicker;
    private javax.swing.JComboBox destination;
    private javax.swing.JComboBox fromWhere;
    private javax.swing.JPanel id_supervisorPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField name;
    private javax.swing.JTextField paidText;
    private javax.swing.JTextField returnText;
    private javax.swing.JPanel seatPanel;
    private javax.swing.JComboBox subFrom;
    private javax.swing.JComboBox subTo;
    private javax.swing.JTextField supervisor_mob_field;
    private javax.swing.JTextField supervisor_name_field;
    private javax.swing.JComboBox time;
    // End of variables declaration//GEN-END:variables
}
